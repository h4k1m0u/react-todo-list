{"version":3,"sources":["components/Header.jsx","components/Todo.jsx","components/DialogAdd.jsx","App.jsx","index.jsx"],"names":["useStyles","makeStyles","title","flexGrow","Header","appName","onAdd","styles","AppBar","position","Toolbar","Typography","variant","className","IconButton","color","onClick","AddCircle","defaultProps","Todo","onDelete","todo","key","value","ListItem","button","ListItemText","primary","DialogAdd","open","onClose","onChange","onSubmit","Dialog","DialogTitle","DialogContent","TextField","fullWidth","label","DialogActions","Button","App","props","state","item","items","bind","axios","get","then","res","data","map","slice","v","k","setState","e","this","target","preventDefault","keys","maxKey","Math","max","index","indexOf","splice","CssBaseline","List","component","React","Component","ReactDOM","render","name","document","getElementById"],"mappings":"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","file":"static/js/main.c8629a6d.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { AddCircle } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = ({ appName, onAdd }) => {\n  // hooks\n  const styles = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={styles.title}>\n            { appName }\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            onClick={onAdd}\n          >\n            <AddCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\n// avoids eslint warning about props\nHeader.propTypes = {\n  appName: PropTypes.string,\n  onAdd: PropTypes.func,\n};\nHeader.defaultProps = {\n  appName: 'My App',\n  onAdd: () => {},\n};\n\nexport default Header;\n","import React from 'react';\nimport { ListItem, ListItemText } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ onDelete, todo: { key, value } }) => (\n  <ListItem button onClick={() => onDelete(key)}>\n    <ListItemText primary={value} />\n  </ListItem>\n);\n\n// props validation\nTodo.propTypes = {\n  onDelete: PropTypes.func,\n  todo: PropTypes.shape({\n    key: PropTypes.number,\n    value: PropTypes.string,\n  }),\n};\nTodo.defaultProps = {\n  onDelete: () => {},\n  todo: {\n    key: 0,\n    value: '',\n  },\n};\n\nexport default Todo;\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst DialogAdd = ({\n  open,\n  onClose,\n  onChange,\n  onSubmit,\n}) => (\n  <Dialog\n    open={open}\n  >\n    <DialogTitle>\n      Add a new todo\n    </DialogTitle>\n    <DialogContent>\n      <TextField\n        fullWidth\n        label=\"Todo\"\n        onChange={onChange}\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClose}\n      >\n        Cancel\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onSubmit}\n      >\n        Submit\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\n// props validation\nDialogAdd.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onChange: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\nDialogAdd.defaultProps = {\n  open: false,\n  onClose: () => {},\n  onChange: () => {},\n  onSubmit: () => {},\n};\n\nexport default DialogAdd;\n","// Simple todo list\n// https://medium.com/@aghh1504/1-simple-react-todo-list-52186b62976b\nimport React from 'react';\nimport axios from 'axios';\nimport {\n  List,\n  CssBaseline,\n} from '@material-ui/core';\nimport Header from './components/Header';\nimport Todo from './components/Todo';\nimport DialogAdd from './components/DialogAdd';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // init state variables\n    this.state = {\n      item: '',\n      items: [],\n      open: false,\n    };\n\n    // binding necessary to make 'this' work in callback\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onClose = this.onClose.bind(this);\n  }\n\n  componentDidMount() {\n    // get todos remotely\n    axios.get('https://jsonplaceholder.typicode.com/todos').then((res) => {\n      const { data } = res;\n      const todos = data.map((item) => item.title);\n      const items = todos.slice(0, 10).map((v, k) => ({\n        key: k,\n        value: v,\n      }));\n\n      this.setState({\n        items,\n      });\n    });\n  }\n\n  onChange(e) {\n    // save entered value\n    this.setState({\n      item: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    // append entered value & clear input\n    const { items, item } = this.state;\n    const keys = items.map((todo) => todo.key);\n    const maxKey = Math.max(...keys);\n\n    if (item) {\n      this.setState({\n        items: [\n          {\n            key: maxKey + 1,\n            value: item,\n          },\n          ...items,\n        ],\n        item: '',\n      });\n    }\n\n    // close dialog\n    this.onClose();\n  }\n\n  onDelete(key) {\n    // delete element by key\n    const { items } = this.state;\n    const keys = items.map((todo) => todo.key);\n    const index = keys.indexOf(key);\n\n    items.splice(index, 1);\n    this.setState({\n      items,\n    });\n  }\n\n  onAdd() {\n    // show dialog\n    this.setState({\n      open: true,\n    });\n  }\n\n  onClose() {\n    // close dialog\n    this.setState({\n      open: false,\n    });\n  }\n\n  render() {\n    const { items, open } = this.state;\n\n    return (\n      <>\n        <CssBaseline />\n        <Header appName=\"Todo-list\" onAdd={this.onAdd} />\n\n        <List component=\"nav\">\n          {\n            items.map((todo) => (\n              <Todo key={todo.key} todo={todo} onDelete={this.onDelete} />\n            ))\n          }\n        </List>\n\n        <DialogAdd\n          open={open}\n          onClose={this.onClose}\n          onChange={this.onChange}\n          onSubmit={this.onSubmit}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App name=\"Hakim\" />, document.getElementById('root'));\n"],"sourceRoot":""}